library(readxl)
raw_welfare <- read.spss(file = "Koweps_hpc10_2015_bata1.sav", to.data.frame = T)
source('C:/Users/PC/Desktop/R 작업/Practice_Chap09(한국복지패널데이터분석_프로젝트)/ex01.R', encoding = 'UTF-8', echo=TRUE)
install.packages("readxl")
raw_welfare <- read.spss(file = "Koweps_hpc10_2015_bata1.sav", to.data.frame = T)
raw_welfare <- read.spss(file = "Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
install.packages("foreign")
install.packages("readxl")
library(foreign)
library(dplyr)
library(ggplot2)
library(readxl)
raw_welfare <- read.spss(file = "Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
dim(welfare)
welfare <- raw_welpare
welfare <- raw_welpare
welfare <- raw_welpare
View(raw_welfare)
welfare <- raw_welfare
dim(welfare)
welfare <- rename(welfare,
sex = h10_g3,                        # 성별
birth = h10_g4,                      # 출생 년도
marriage = h10_g10,                   # 혼인상태
religion = h10_g11,                  # 종교
income = p1002_8aq1,                 # 월급
code_job = h10_echo9,                # 직업코드
code_religion = h10_reg7)
welfare <- rename(welfare,
sex = h10_g3,                        # 성별
birth = h10_g4,                      # 출생 년도
marriage = h10_g10,                   # 혼인상태
religion = h10_g11,                  # 종교
income = p1002_8aq1,                 # 월급
code_job = h10_eco9,                # 직업코드
code_religion = h10_reg7)
dim(welfare)
class(welfare$sex)
welfare$sex <- ifelse(welfare$sex == 9, NA, welfare$sex)
table(is.na(welfare$sex))
welfare$sex <- ifelse(welfare$sex == 1, "male", "female")
table(welfare$sex)
qplot(welfare$sex)
library(foreign)      # spss불러오기
library(dplyr)        # 전처리
library(ggplot2)      # 시각화
library(readxl)
qplot(welfare$sex)
class(welfare$birth)
class(welfare$income)
summary(welfare$income)
qplot(welfare$income)
qplot(welfare$income) + xlim(0, 1000)
summary(welfare$income)
welfare$income <-
ifelse(welfare$income %in% c(0, 9999), NA, welfare$income)
table(is.na(welfare$income))
sex_income <- welfare %>%
filter(!is.na(income)) %>%              # 월급 변수의 NA가 아닌 것만 추출
group_by(sex) %>%                       # sex로 그룹핑
summarise(mean_income = mean(income))
sex_income
ggplot(data = sex_income, aes(x = sex, y = mean_income)) + geom_col()
class(welfare$birth)
summary(welfare$birth)
qplot(welfare$birth)
table(is.na(welfare$birth))
welfare$birth <- ifelse(welfare$birth == 9999, NA, welfare$birth)
table(is.na(welfare$birth))
welfare$age
welfare$age <- 2015 - walfare$birth + 1
welfare$age <- 2015 - welfare$birth + 1
summary(welfare$age)
qplot(welfare$age)
welfare %>%
filter(!is.na(income)) %>%
group_by(age) %>%
summarise(mean_income = mean(income))
age_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age) %>%
summarise(mean_income = mean(income))
View(age_income)
ggplot(data = age_income, aes(x = age, y = mean_income)) + geom_line()
welfare <- welfare %>%
mutate(ageg = iflese(age < 30, "young", ifelse(age <= 59, "middle", "old")))
welfare <- welfare %>%
mutate(ageg = ifelse(age < 30, "young", ifelse(age <= 59, "middle", "old")))
head(welfare$ageg)
table(welfare$ageg)
welfare %>%
filter(!is.na(income)) %>%
group_by(ageg) %>%
summarise(mean_ageg_income = mean(income))
ageg_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg) %>%
summarise(mean_ageg_income = mean(income))
ageg_income
ggplot(data = ageg_income, aes(x = ageg, y = mean_ageg_income)) + geom_col()
ggplot(data = ageg_income, aes(x = ageg, y = mean_ageg_income)) + geom_col() +
scale_x_discrete(limits = c("young", "middle", "old"))
ggplot(data = ageg_income, aes(x = ageg, y = mean_ageg_income)) + geom_col()
library(foreign)      # spss불러오기
library(dplyr)        # 전처리
library(ggplot2)      # 시각화
library(readxl)       # 엑셀 파일 불러오기
sex_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg, sex) %>%  # 그룹핑을 ageg(연령대), sex(성별)로 하고있다.
summarise(mean_income = mean(income))
sex_income
ggplot(data = sex_income, aes(x = ageg, y = mean_income, fill = sex)) +
geom_col() +
scale_x_discrete(limits = c("young", "middle", "old"))
ggplot(data = sex_income, aes(x = ageg, y = mean_income, fill = sex)) +
geom_col(position = "dodge") +
scale_x_discrete(limits = c("young", "middle", "old"))
ggplot(data = sex_income, aes(x = ageg, y = mean_income, fill = sex)) +
geom_col(position = "dodge") +
scale_x_discrete(limits = c("young", "middle", "old"))
sex_age <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, sex) %>%
summarise(mean_income = mean(income))
sex_age
ggplot(data = sex_age, aes(x = age, y = mean_income, col = sex)) +
geom_line()
class(welfare$code_job)
table(welfare$code_job)
library(readxl)
list_job <- read_excel("Koweps_Codebook.xlsx", col_names = T, sheet = 2)
list_job
dim(list_job)
head(welfare$code_job)
head(welfare$code_job)
View(list_job)
View(welfare$code_job)
welfare <- left_join(welfare, list_job, id = "code_job")
welfare %>%
filter(!is.na(code_job)) %>%
select(code_job, job) %>%
head(10)
welfare %>%
filter(is.na(income)) %>%
select(income, job, code_job)
job_income <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income))
head(job_income)
top10 <- job_income %>%
arrange(desc(mean_income)) %>%
head(10)
top10
ggplot(data = top10, aes(x = reorder(job, mean_income), y = mean_income)) +
geom_col() +
coord_flip()
top10
bottom10 <- job_income %>%
arrange(mean_income) %>%
head(10)
bottom10
ggplot(data = bottom10, aes(x = reorder(job, -mean_income), y = mean_income)) +
geom_col() +
coord_flip() +
ylim(0, 850)
job_desc_male <- welfare %>%
filter(!is.na(job) & sex == "male") %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(n) %>%
head(10)
job_desc_male
ggplot(data = job_male, aes(x = reorder(job, n), y = n)) +
geom_col() +
coord_flip()
ggplot(data = job_male, aes(x = reorder(job, n), y = n)) +
geom_col() +
coord_flip()
job_male
View(job_income)
job_male <- welfare %>%
filter(!is.na(job) & sex == "male") %>%
group_by(job) %>%
summarise(n = n()) %>% # 행의 갯수를 요약
arrange(desc(n)) %>%   # 행의 갯수에 따라 내림차순 정렬
head(10)
job_male
ggplot(data = welfare$birth, aes(x = age, y = n())) + geom_line()
# 출생년도별 인구수
ggplot(data = welfare, aes(x = age, y = n())) + geom_line()
ggplot(data = age_income, aes(x = age, y = mean_income)) + geom_line()
birth_bar <- welfare %>%
filter(!is.na(birth)) %>%
group_by(age) %>%
summarise(count = )
birth_bar <- welfare %>%
filter(!is.na(birth)) %>%
group_by(age) %>%
summarise(count = n())
birth_bar
ggplot(data = birth_bar, aes(x = age, y = n())) + geom_line()
ggplot(data = birth_bar, aes(x = age, y = count)) + geom_line()
birth_bar <- welfare %>%
filter(!is.na(birth)) %>%
group_by(birth) %>%
summarise(count = n())
birth_bar
ggplot(data = birth_bar, aes(x = age, y = count)) + geom_line()
ggplot(data = birth_bar, aes(x = birth, y = count)) + geom_line()
class(welfare$code_region)
class(welfare$code_region)
View(sex_age)
table(welfare)
welfare <- rename(welfare,
sex = h10_g3,                        # 성별
birth = h10_g4,                      # 출생 년도
marriage = h10_g10,                  # 혼인상태
religion = h10_g11,                  # 종교
income = p1002_8aq1,                 # 월급
code_job = h10_eco9,                 # 직업코드
code_region = h10_reg7)
library(foreign)      # spss불러오기
library(dplyr)        # 전처리
library(ggplot2)      # 시각화
library(readxl)
welfare <- rename(welfare,
sex = h10_g3,                        # 성별
birth = h10_g4,                      # 출생 년도
marriage = h10_g10,                  # 혼인상태
religion = h10_g11,                  # 종교
income = p1002_8aq1,                 # 월급
code_job = h10_eco9,                 # 직업코드
code_region = h10_reg7)
View(age_income)
View(age_income)
View(age_income)
View(age_income)
View(age_income)
rm(age_income)
rm(welfare)
rm(ageg_income)
rm(birth_bar)
rm(bottom10)
rm(job_desc_male)
rm(job_income)
rm(job_male)
rm(list_job)
rm(raw_welfare)
rm(sex_age)
rm(sex_income)
rm(top10)
install.packages("foreign")
install.packages("readxl")
install.packages("foreign")
install.packages("readxl")
library(foreign)      # spss불러오기
library(dplyr)        # 전처리
library(ggplot2)      # 시각화
library(readxl)
library(foreign)      # spss불러오기
library(dplyr)        # 전처리
library(ggplot2)      # 시각화
library(readxl)       # 엑셀 파일 불러오기
raw_welfare <- read.spss(file = "Koweps_hpc10_2015_beta1.sav", to.data.frame = T)
welfare <- raw_welfare
class(welfare$sex)
table(welfare$sex)
welfare <- rename(welfare,
sex = h10_g3,                        # 성별
birth = h10_g4,                      # 출생 년도
marriage = h10_g10,                  # 혼인상태
religion = h10_g11,                  # 종교
income = p1002_8aq1,                 # 월급
code_job = h10_eco9,                 # 직업코드
code_region = h10_reg7)
class(welfare$sex)
table(welfare$sex)
table(welfare$sex)
welfare$sex <- ifelse(welfare$sex == 9, NA, welfare$sex)
table(is.na(welfare$sex))
welfare$sex <- ifelse(welfare$sex == 1, "male", "female")
table(welfare$sex)
qplot(welfare$sex)
class(welfare$income)
summary(welfare$income)
qplot(welfare$income)
qplot(welfare$income) + xlim(0, 1000)
summary(welfare$income)
welfare$income <-
ifelse(welfare$income %in% c(0, 9999), NA, welfare$income)
table(is.na(welfare$income))
sex_income <- welfare %>%
filter(!is.na(income)) %>%              # 월급 변수의 NA가 아닌 것만 추출
group_by(sex) %>%                       # sex로 그룹핑
summarise(mean_income = mean(income))
sex_income
ggplot(data = sex_income, aes(x = sex, y = mean_income)) + geom_col()
class(welfare$birth)
summary(welfare$birth)
qplot(welfare$birth)
table(is.na(welfare$birth))
welfare$birth <- ifelse(welfare$birth == 9999, NA, welfare$birth)
table(is.na(welfare$birth))
welfare$age <- 2015 - welfare$birth + 1
summary(welfare$age)
qplot(welfare$age)
age_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age) %>%
summarise(mean_income = mean(income))
age_income
ggplot(data = age_income, aes(x = age, y = mean_income)) + geom_line()
welfare <- welfare %>%
mutate(ageg = ifelse(age < 30, "young", ifelse(age <= 59, "middle", "old")))
ageg_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg) %>%
summarise(mean_ageg_income = mean(income))
ageg_income
ggplot(data = ageg_income, aes(x = ageg, y = mean_ageg_income)) + geom_col()
ggplot(data = ageg_income, aes(x = ageg, y = mean_ageg_income)) + geom_col() +
scale_x_discrete(limits = c("young", "middle", "old"))
sex_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg, sex) %>%  # 그룹핑을 ageg(연령대), sex(성별)로 하고있다.
summarise(mean_income = mean(income))
sex_income
ggplot(data = sex_income, aes(x = ageg, y = mean_income, fill = sex)) +
geom_col() +
scale_x_discrete(limits = c("young", "middle", "old"))
ggplot(data = sex_income, aes(x = ageg, y = mean_income, fill = sex)) +
geom_col(position = "dodge") +
scale_x_discrete(limits = c("young", "middle", "old"))
sex_age <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, sex) %>%
summarise(mean_income = mean(income))
sex_age
ggplot(data = sex_age, aes(x = age, y = mean_income, col = sex)) +
geom_line()
class(welfare$code_job)
library(readxl)
list_job <- read_excel("Koweps_Codebook.xlsx", col_names = T, sheet = 2)
list_job
dim(list_job)
welfare <- left_join(welfare, list_job, id = "code_job")
welfare %>%
filter(!is.na(code_job)) %>%
select(code_job, job) %>%
head(10)
welfare %>%
filter(is.na(income)) %>%
select(income, job, code_job)
job_income <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income))
head(job_income)
top10 <- job_income %>%
arrange(desc(mean_income)) %>%
head(10)
top10
ggplot(data = top10, aes(x = reorder(job, mean_income), y = mean_income)) +
geom_col() +
coord_flip()
bottom10 <- job_income %>%
arrange(mean_income) %>%
head(10)
bottom10
ggplot(data = bottom10, aes(x = reorder(job, -mean_income), y = mean_income)) +
geom_col() +
coord_flip() +
ylim(0, 850)
job_male <- welfare %>%
filter(!is.na(job) & sex == "male") %>%
group_by(job) %>%
summarise(n = n()) %>% # 행의 갯수를 요약
arrange(desc(n)) %>%   # 행의 갯수에 따라 내림차순 정렬
head(10)
job_male
job_desc_male <- welfare %>%
filter(!is.na(job) & sex == "male") %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(n) %>%
head(10)
job_desc_male
job_female <- welfare %>%
filter(!is.na(job) & sex == "female") %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
job_female
ggplot(data = job_male, aes(x = reorder(job, n), y = n)) +
geom_col() +
coord_flip()
ggplot(data = job_female, aes(x = reorder(job, n), y = n)) +
geom_col() +
coord_flip()
birth_bar <- welfare %>%
filter(!is.na(birth)) %>%
group_by(birth) %>%
summarise(count = n())
birth_bar
ggplot(data = birth_bar, aes(x = birth, y = count)) + geom_line()
class(welfare$religion)
welfare$religion <- ifelse(welfare$religion == 1, "yes", "no")
table(welfare$religion)
welfare$group_marriage <- ifelse(welfare$marriage == 1, "marriage",
ifelse(welfare$marriage == 3, "divorce", NA))
table(welfare$group_marriage)
table(is.na(welfare$group_marriage))
qplot(welfare$group_marriage)
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>% # 결측치 제거
group_by(religion, group_marriage) %>% # 종교, 결혼여부에 따른 그루핑
summarise(n = n()) %>% # 행의 갯수 요약
mutate(tot_group = sum(n)) %>% # tot_group에 행의 합계 대입
# round()함수를 이용하여 종교유무에 따라 비율을 구하고 있다.
mutate(pct = round(n/tot_group*100, 1))
religion_marriage
religion_marriage
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(religion, group_marriage) %>%  # religion, group_marriage별로 빈도 구함
group_by(religion) %>%               # 종교별로 그룹핑을 해야 sum(n)이 총계가 나온다.
mutate(pct = round(n/sum(n)*100, 1))
divorce <- religion_marriage %>%
filter(group_marriage == "divorce") %>%
select(religion, pct)
ggplot(data = divorce, aes(x = religion, y = pct, fill = religion)) + geom_col()
ageg_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>% # 결측치 제외
group_by(ageg, group_marriage) %>% # 연령대, 결혼여부 그룹핑
summarise(n = n()) %>% # 행의 갯수에 따른 요약
mutate(tot_group = sum(n)) %>% # tot_group에 행의 총계를 대입
mutate(pct = round(n/tot_group*100, 1))
ageg_divorce <- ageg_marriage %>%
filter(ageg != "young" & group_marriage == "divorce") %>%
select(ageg, pct)
ggplot(data = ageg_divorce, aes(x = ageg, y = pct, fill = ageg)) + geom_col()
ageg_religion_marriage <- welfare %>%
# 결혼상태가 존재하는 것과 "young"인 것중에
filter(!is.na(group_marriage) & ageg != "young") %>%
group_by(ageg, religion, group_marriage) %>%  # 연령, 종교, 결혼상태로 그룹핑
summarise(n = n()) %>% # 행의 갯수에 대한 요약
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100, 1))
ageg_religion_marriage
df_divorce <- ageg_religion_marriage %>%
filter(group_marriage == "divorce") %>% # 이혼한 사람중에서
select(ageg, religion, pct)
df_divorce
ggplot(data = df_divorce, aes(x = ageg, y = pct, fill = religion)) +
geom_col(position = "dodge")
table(welfare)
class(welfare$code_region)
table(welfare$code_region)
list_region <- data.frame(code_region = c(1:7),
region = c("서울",
"수도권(인천/경기)",
"부산//경남/울산",
"대구/경북",
"대전/충남",
"강원/충북",
"광주/전남/전북/제주도"))
list_region
welfare <- left_join(welfare, list_region, id = "code_region")
welfare %>%
#count(code_region, region)
select(code_region, region) %>%
tall()
welfare %>%
#count(code_region, region)
select(code_region, region) %>%
tail()
region_ageg <- welfare %>%
group_by(region, ageg) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%
utate(pct = round(n/tot_group*100, 2))
region_ageg <- welfare %>%
group_by(region, ageg) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100, 2))
View(region_ageg)
ggplot(data = region_ageg, aes(x = region, y = pct, fill = ageg)) + geom_col() + coord_flip()
list_order_old <- region_ageg %>%
filter(ageg == "old") %>%
arrange(pct)
list_order_old
order <- list_order_old$region
order
View(list_order_old$region)
ggplot(data = region_ageg, aes(x = region, y = pct, fill = ageg)) + geom_col() +
coord_flip() + scale_x_discrete(limits = ordered)
class(region_ageg$ageg)
levels(region_ageg$ageg)
region_ageg$ageg <- factor(region_ageg$ageg, level = c("old", "middle", "young"))
class(region_ageg$ageg)
ggplot(data = region_ageg, aes(x = region, y = pct, fill = ageg)) +
geom_col() +
coord_flip() +
scale_x_discrete(limits = order)
ggplot(data = region_ageg, aes(x = region, y = pct, fill = ageg)) + geom_col() +
coord_flip() + scale_x_discrete(limits = ordered)
ggplot(data = region_ageg, aes(x = region, y = pct, fill = ageg)) + geom_col() +
coord_flip() + scale_x_discrete(limits = order)
