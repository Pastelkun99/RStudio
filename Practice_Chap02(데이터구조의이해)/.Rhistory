source('C:/Users/PC/Desktop/R 작업/Practice_Chap02(데이터구조의이해)/Ex01.R', encoding = 'UTF-8', echo=TRUE)
x <- c(80, 85, 70)
x
x <- seq(1:10)
x
x <- seq(1, 100, by = 3)
x
x <- seq(1, 10, length.out = 5)
x
x <- c(1, 2, 3)
x
x <- rep(x, times = 2)
x
x <- rep(x, each = 2)
x
x <- c(1, 2, 3)
x <- rep(x, each = 2)
x
x <- c(100, 20, 300, 4, 55)
x[2]
x[c(1, 3, 5)]
x[-c(1, 4)]
x[x>60]
x[2] <- 200
x[2]
x
x[x<=55] <- -1
x
x <- seq(1:10)
x
sum(x)
mean(x)
var(x) # 분산
sd(x) # 표준편차
sqrt(x) # 각 원소값의 제곱근
length(x) # x벡터의 원소 개수
sqrt(x) # 각 원소값의 제곱근
sd(x) # 표준편차
length(x) # x벡터의 원소 개수
x <- c(1, 2, -10)
abs(x) # 절대값
x <- array(1:3, dim = c(3))
x
class(x)
x <- array(c(1:6), dim = c(2, 3))
x
x <- array(seq(2, 12, by = 2), dim = c(2, 3))
x
names <- list(c("1행", "2행"), c("1일", "2일", "3일"))
x <- array(c(w2, 4, 6, 8, 10, 12), dim = c(2, 3))
x <- array(c(2, 4, 6, 8, 10, 12), dim = c(2, 3))
x
x <- array(c(2, 4, 6, 8, 10, 12), dim = c(2, 3), dimnames = names)
x
names <- list(c("1행", "2행"), c("1열", "2열", "3열"))
x <- array(c(2, 4, 6, 8, 10, 12), dim = c(2, 3), dimnames = names)
x
x["1행",]
x[,"2열"]
x <- array(c(1:24), dim = c(2, 3, 4))
x
x <- martix(seq(1:6), nrow = 2)
x <- matrix(seq(1:6), nrow = 2)
x
x <- matrix(seq(1:6), nrow = 2, byrow = TRUE)
x
x[1, 3]
names <- list(c("1행", "2행"), c("1열", "2열", "3열"))
x <- matrix(seq(1:6), nrow = 2, byrow = TRUE, dimnames = names)
x
v1 <- c(1, 2, 3, 4)
v2 <- c(5, 6, 7, 8)
v3 <- c(9, 10, 11, 12)
x <- cbind(v1, v2, v3)
x
class(x)
rownames(x) <- c("1행", "2행", "3행", "4행")
x
colnames(x) <- c("1열", "2열", "3열")
x
x <- rbind(v1, v2, v3)
x
rownames(x) <- c("1행", "2행", "3행")
x
colnames(x) <- c("1열", "2열", "3열", "4열")
x
x <- list("신은혁", "20081223", 11, c("4학년 3반", "태권도"))
x
class(x)
y <- list(성명 = "신은혁", 출생 = "20081223", 나이 = 11, 반특기 = c("4학년 3반", "태권도"))
y
View(y)
dim(x)
str(x)
x <- data.frame(성명=c("홍길동", "손오공"), 나이=c(20, 30), 주소=c("서울", "부산"))
x
class(x)
x <- cbind(x, 학과=c("e-비즈", "경영"))
x
x <- rbind(x, data.frame(성명="신은혁", 나이=11, 주소="대구", 학과="초딩"))
x
iris
qplot(Petal.Width, Petal.Length, data = iris, colour = Species)
library(ggplot2)
qplot(Petal.Width, Petal.Length, data = iris, colour = Species)
library(randomForest)
library(tree)
library(ggplot2)
library(GGally)
iris_index <- sample(2, nrow(iris), replace = T, prob = c(0.7, 0.3))
train <- iris[iris_index == 1,]
test <- iris[iris_index == 2,]
iris_rf <- randomForest(Species ~ ., data = train, importance = T)
qplot(Petal.Width, Petal.Length, data = iris, colour = Species)
