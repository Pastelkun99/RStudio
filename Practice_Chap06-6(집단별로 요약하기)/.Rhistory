exam <- read.csv("csv_exam.csv")
exam
View(exam)
library(dplyr)
exam %>% summarise(mean_math = mean(math))
exam %>% mutate(mean_math = mean(math))
exam %>% summarise(mean_math = mean(math))
exam %>% mutate(mean_math = mean(math))
exam %>%
group_by(class)
exam %>%
group_by(class) %>%
summarise(mean_math = mean(math))
exam %>%
group_by(class) %>%
summarise(mean_math = mean(math),
sum_math = sum(math),
median_math = median(math),
n = n()
)
mpg <- as.data.frame(ggplot::mpg)
mpg <- as.data.frame(ggplot2::mpg)
mpg
mpg %>%
group_by(manufacturer, drv)
mpg %>%
group_by(manufacturer, drv) %>%
summarise(mean_cty = mean(cty)) %>%
head(10)
mpg %>%
group_by(manufacturer) %>%                  # 우선 제조사 별로 분류하고
filter(class == "suv") %>%                  # 그 제조사별로 분류한 것에서 suv만 추출
mutate(tot = (cty+hwy)/2) %>%               # 통합 연비 변수를 생성한다.
summarise(mean_tot = mean(tot)) %>%         # 통합 연비의 평균을 구하고
arrange(desc(mean_tot)) %>%                 # 내림차순 정렬한다.
head(5)
mpg %>%
group_by(manufacturer) %>%                  # 우선 제조사 별로 분류하고
filter(class == "suv") %>%                  # 그 제조사별로 분류한 것에서 suv만 추출
mutate(tot = (cty+hwy)/2) %>%               # 통합 연비 변수를 생성한다.
summarise(mean_tot = mean(tot)) %>%         # 통합 연비의 평균을 구하고
arrange(desc(mean_tot))
library(ggplot2)
View(mpg)
mpg %>%
group_by(class) %>%
summarise(mean_cty = mean(cty))
mpg %>%
group_by(class) %>%
summarise(mean_cty = mean(cty)) %>%
arrange(desc(cty))
mpg %>%
group_by(class) %>%
summarise(mean_cty = mean(cty)) %>%
arrange(desc(mean_cty))
# 문제 3
mpg %>%
group_by(hwy) %>%
summarise(mean_hwy = mean(hwy)) %>%
arrange(desc(mean_hwy)) %>%
head(3)
mpg %>%
group_by(manufacturer) %>%
summarise(mean_hwy = mean(hwy)) %>%
arrange(desc(mean_hwy)) %>%
head(3)
mpg %>%
filter(class == "compact") %>%
group_by(manufacturer)
mpg %>%
filter(class == "compact") %>%
group_by(manufacturer) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(3)
mpg %>%
group_by(class) %>%
summarise(mean_cty = mean(cty))
mpg %>%
group_by(class) %>%
summarise(mean_cty = mean(cty)) %>%
arrange(desc(mean_cty))
class(top_5)
top_5
top_5 <- mpg %>%
group_by(manufacturer) %>%                  # 우선 제조사 별로 분류하고
filter(class == "suv") %>%                  # 그 제조사별로 분류한 것에서 suv만 추출
mutate(tot = (cty+hwy)/2) %>%               # 통합 연비 변수를 생성한다.
summarise(mean_tot = mean(tot)) %>%         # 통합 연비의 평균을 구하고
arrange(desc(mean_tot)) %>%                 # 내림차순 정렬한다.
head(5)
top_5
height <- as.numeric(top_5$mean_tot)
name <- as.character(top_5$manufacturer)
name
height
barplot(height, names.arg = name, main = "제조사별 통합연비",
col = rainbow(length(height)), xlab = "제조사", ylab = "통합연비")
barplot(height, names.arg = name, main = "제조사별 통합연비",
col = rainbow(length(height)), xlab = "제조사", ylab = "통합연비",
ylim = c(0, 25))
mpg %>%
group_by(manufacturer) %>%                  # 우선 제조사 별로 분류하고
filter(class == "suv") %>%                  # 그 제조사별로 분류한 것에서 suv만 추출
mutate(tot = (cty+hwy)/2) %>%               # 통합 연비 변수를 생성한다.
summarise(mean_tot = mean(tot)) %>%         # 통합 연비의 평균을 구하고
arrange(desc(mean_tot)) %>%                 # 내림차순 정렬한다.
head(5)
library(dplyr)
mpg %>%
group_by(manufacturer) %>%                  # 우선 제조사 별로 분류하고
filter(class == "suv") %>%                  # 그 제조사별로 분류한 것에서 suv만 추출
mutate(tot = (cty+hwy)/2) %>%               # 통합 연비 변수를 생성한다.
summarise(mean_tot = mean(tot)) %>%         # 통합 연비의 평균을 구하고
arrange(desc(mean_tot)) %>%                 # 내림차순 정렬한다.
head(5)
mpg %>%
filter(class == "compact") %>%
group_by(manufacturer) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(3)
library(ggplot2)
library(dplyr)
mpg %>%
filter(class == "compact") %>%
group_by(manufacturer) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(3)
mpg %>%
filter(class == "compact") %>%
group_by(manufacturer) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
head(5)
